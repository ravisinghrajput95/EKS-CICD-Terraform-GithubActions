name: EKS-CICD-Terraform-GithubActions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     - name: Check out the repo
       uses: actions/checkout@v2
       
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ap-south-1

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: node-app
        IMAGE_TAG: ${{ github.sha }}
       run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

     - name: Update tag
       run: |
         version=$(cat ./terraform/application.tf | grep image | tr -d '"' | cut -d ':' -f 2 )
         sed -i "s/$version/$IMAGE_TAG/" ./terraform/application.tf

     - name: Commit and push changes
       uses: devops-infra/action-commit-push@v0.3
       with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         commit_message: Version updated


  terraform:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.7

    - name: Terraform Format
      id: fmt
      working-directory: terraform
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      working-directory: terraform
      run: terraform init

    - name: Terraform Validate
      id: validate
      working-directory: terraform
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      working-directory: terraform
      run: terraform plan -no-color -input=false

    - name: Terraform Apply
      working-directory: terraform
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
       
